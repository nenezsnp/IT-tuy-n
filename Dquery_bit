#include <bits/stdc++.h>
using namespace std;
#define sp ' '
#define endl '\n'

int n,k;
vector<int> a;
struct BIT {
    int f[int(1e6)+5];
    void reset() {
        memset(f,0,sizeof(f));
    }
    void update(int i, int val) {
        for(; i<=n; i+=i&-i) f[i]=max(f[i],val);
    }
    int get(int i) {
        int ret=0;
        for(; i; i-=i&-i) ret=max(ret,f[i]);
        return ret;
    }
} tree;

int lis() {
    int ret = 0;
    for(int i=0; i<a.size(); i++) {
        int val = tree.get(a[i]);
        val++;
        ret = max(ret,val);
        tree.update(a[i],val);
    }
    return ret;
}

int main() {
    cin >> n >> k;
    for(int pos=1; pos*k<=n; pos++) {
        for(int j=pos*k; j>=(pos-1)*k+1; j--) a.push_back(j);
    }
    for(int i=n; i>=(n/k)*k+1; i--) a.push_back(i);
    int LDS = lis();
    tree.reset();
    reverse(a.begin(),a.end());
    int LIS = lis();
    if (max(LIS,LDS)>k) cout << -1;
    else {
        assert(max(LIS,LDS)==k);
        for(int i=0; i<a.size(); i++) cout << a[i] << sp;
    }
}
